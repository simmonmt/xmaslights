cc_binary(
    name = "showfound",
    srcs = ["showfound_main.cc"],
    linkopts = select({
        "@platforms//os:macos": ["-undefined error"],
        "//conditions:default": [],
    }),
    deps = [
        ":controller",
        ":model",
        ":view",
        "//:opencv",
        "//lib/file:coords",
        "//lib/file:readers",
        "@com_google_absl//absl/debugging:failure_signal_handler",
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/flags:parse",
        "@com_google_absl//absl/flags:usage",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/log:check",
        "@com_google_absl//absl/log:initialize",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
    ],
)

cc_library(
    name = "controller",
    srcs = ["controller.cc"],
    hdrs = ["controller.h"],
    deps = [
        ":controller_view_interface",
        ":model",
        ":solver",
        ":view",
        "@com_google_absl//absl/log:check",
    ],
)

cc_library(
    name = "controller_view_interface",
    hdrs = ["controller_view_interface.h"],
)

cc_library(
    name = "view",
    srcs = ["view.cc"],
    hdrs = ["view.h"],
    deps = [
        ":click_map",
        ":controller_view_interface",
        ":view_pixel",
        "//:opencv",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/log:check",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
    ],
)

cc_library(
    name = "view_pixel",
    hdrs = ["view_pixel.h"],
    deps = [
        "//:opencv",
    ],
)

cc_library(
    name = "model",
    srcs = ["model.cc"],
    hdrs = ["model.h"],
    deps = [
        "//:opencv",
        "@com_google_absl//absl/log:check",
        "@com_google_absl//absl/types:span",
    ],
)

cc_library(
    name = "solver",
    srcs = ["solver.cc"],
    hdrs = ["solver.h"],
    deps = [
        ":model",
        "//:opencv",
        "//lib/geometry",
        "//lib/geometry:camera",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/log:check",
    ],
)

cc_test(
    name = "solver_test",
    srcs = ["solver_test.cc"],
    deps = [
        ":model",
        ":solver",
        "//:opencv",
        "//lib/geometry:camera",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "click_map",
    srcs = ["click_map.cc"],
    hdrs = ["click_map.h"],
    deps = [
        "//:opencv",
        "@com_google_absl//absl/types:span",
    ],
)

cc_test(
    name = "click_map_test",
    srcs = ["click_map_test.cc"],
    deps = [
        ":click_map",
        "@com_google_googletest//:gtest_main",
    ],
)
